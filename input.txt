int fact (int x) {
	// recursive factorial function
	if (x>1) return x * fact(x-1);
	else return 1;
}
void main () {
	/* Winter Quarter 2014
	CS 411 project #1
	A lexical analyzer */
	int x;
	int total;
	println ("factorial of 10 is ", fact (10), " from the recursive function");
	total = 1; x = 1;
	for ( ; x<=10; ) { total = total * x; x = x + 1; }
	println ("iterative result of 10! is ", total);
}
class cs411 {
	int Funny;
	double funny;
	bool flag;
	string s;
	int [] a;
	flag = true;
	Funny = 0X89aB; funny = 123456.0E+7;
	s = "hello world";
	while (x = (Funny/10) <0) println (s, " have fun !");
	a = newarray (20, int);
}

// operators
+ - * / < <= > >= == != && || ! = ; , . () [] {}

// operator slurry with no spaces
+-*/<<=>>===!=&&||!=!,.()[]{}
>=>-+

// identifiers
azzz____aazzz
Azz_
AZ__
ZA__ Z00001290923___
ZA02910_2_AA__

// hex
0xa 0XA 0xf 0XF 0x1 0X1 0x9 0X9

// int
0123 123

// double
12.2E+3 12.3E3 12.3E-3 12. 12.0 12.2e+3 12.3E3 12.3E-5

// invalid double
//12.e 12.e- 12e 12.E 12.E- 12.-E

// bool constants
true false

// string constants
"String"
a"String"
"String"b
"String""String2"
"String"B"String2"
a"string"b
a "String" b
"String "" String2"
" String " " String 2 "
" String " " String2 "
