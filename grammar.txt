Program ::= DeclList
DeclList ::= Decl
DeclList ::= Decl DeclList

Decl ::= VariableDecl
Decl ::= FunctionDecl
Decl ::= ClassDecl
Decl ::= InterfaceDecl

VariableDecl ::= Type _id _semicolon

Type ::= _int
Type ::= _double
Type ::= _bool
Type ::= _string
Type ::= Type _leftbracket _rightbracket
Type ::= _id

FunctionDecl ::= Type _id _leftparen Formals _rightparen StmtBlock
FunctionDecl ::= _void _id _leftparen Formals _rightparen StmtBlock

Formals ::=
Formals ::= VariableList
VariableList ::= Variable
VariableList ::= Variable _comma VariableList

ClassDecl ::= _class _id OptionalExtends OptionalImplements _leftbrace OptionalFields _rightbrace
OptionalExtends ::=
OptionalExtends ::= _extends _id
OptionalImplements ::=
OptionalImplements ::= _implements IDList
IDList ::= _id
IDList ::= _id _comma IDList
OptionalFields ::= 
OptionalFields ::= Field OptionalFields

Field ::= VariableDecl
Field ::= FunctionDecl

InterfaceDecl ::= _interface _id _leftbrace OptionalPrototypes _rightbrace
OptionalPrototypes ::= 
OptionalPrototypes ::= Prototype OptionalPrototypes

Prototype ::= Type _id _leftparen Formals _rightparen _semicolon
Prototype ::= _void _id _leftparen Formals _rightparen _semicolon

StmtBlock ::= _leftbrace OptionalVariableDecls OptionalStmts _rightbrace
OptionalVariableDecls ::=
OptionalVariableDecls ::= VariableDecl OptionalVariableDecls
OptionalStmts ::= 
OptionalStmts ::= Stmt OptionalStmts

Stmt ::= _semicolon
Stmt ::= Expr _semicolon
Stmt ::= IfStmt
Stmt ::= WhileStmt
Stmt ::= ForStmt
Stmt ::= BreakStmt
Stmt ::= ReturnStmt
Stmt ::= PrintStmt
Stmt ::= StmtBlock

IfStmt ::= _if _leftparen Expr _rightparen Stmt OptionalElse
OptionalElse ::= 
OptionalElse ::= _else Stmt

WhileStmt ::= _while _leftparen Expr _rightparen Stmt

ForStmt ::= _for _leftparen OptionalExpr _semicolon Expr _semicolon OptionalExpr _rightparen Stmt

BreakStmt ::= _break _semicolon

ReturnStmt ::= _return OptionalExpr _semicolon

PrintStmt ::= _println _leftparen ExprList _rightparen _semicolon

Expr ::= Lvalue _assignop Expr
Expr ::= Constant
Expr ::= Lvalue
Expr ::= Call
Expr ::= _leftparen Expr _rightparen
Expr ::= Expr _plus Expr
Expr ::= Expr _minus Expr
Expr ::= Expr _multiplication Expr
Expr ::= Expr _division Expr
Expr ::= _minus Expr
Expr ::= Expr _greater Expr
Expr ::= Expr _greaterequal Expr
Expr ::= Expr _less Expr
Expr ::= Expr _lessequal Expr
Expr ::= Expr _equal Expr
Expr ::= Expr _notequal Expr
Expr ::= Expr _and Expr
Expr ::= Expr _or Expr
Expr ::= _not Expr
Expr ::= _readln _leftparen _rightparen
Expr ::= _newarray _leftparen _intconstant _comma Type _rightparen

ExprList ::= Expr
ExprList ::= Expr _comma ExprList

OptionalExpr ::=
OptionalExpr ::= Expr

Lvalue ::= _id
Lvalue ::= Expr _leftbracket Expr _rightbracket
Lvalue ::= Expr _period _id

Call ::= _id _leftparen Actuals _rightparen
Call ::= _id _period _id _leftparen Actuals _rightparen

Actuals ::=
Actuals ::= ExprList

Constant ::= _intconstant
Constant ::= _doubleconstant
Constant ::= _stringconstant
Constant ::= _boolconstant