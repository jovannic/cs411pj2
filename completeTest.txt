int a;
big [] boot;
double b;
bool c;
string d;
int [] e;
int main() {
	int a;
	int b;
	int c;
	true + true;
	true - true;
	true * true;
	true / true;
	a = (b * c) + d / q - r;
	4 < 5;
	5 <= 5;
	6 >= 5;
	6 > 5;
	5 == 5;
	5 != 5;
	!a && !b == a || b;
	readln();
	a = a.apple;  
	a = a.apple();
	a = a.dapple(b);
	(a)[(b)].c = a;
	a[(b)].c = a;
	a[b].c = a;
	(a)[b].c = a;
	break;
	if(lame)
	if(ohGodNo)
		epicFail = true;
	else
		epicWin = true;
	return 5;
	return;
	println(5 + "6");
	for(;5<6;) {
		a;
		a = a;
		"cookies";
		5;
		true;
		8.5e10;
		
	}
	for(i = 0; i < 6; i = i + 1) {
		break;
	}
	while(function()) {
		a = b + c;
	}

	boot = newarray(1, big[][]);
	boot[0] = newarray(5, big[]);
	boot[a] = 2;
}
void functionDos(Random args) {
	println("Much wow!");
	println("such code!");
}
class apple {
	apple a;
	muchwow b;
	int c;
}
class pear extends apple implements fruit {
	apple a;
	pear p;
	apple dapple(apple papple) {
		println("fruit says wow!");
		println("but what does the fox say?");
	}
}
interface fruit {
	apple dapple(apple papple);
}

class Piggy {
    void delete(shit[] allThat) {
        play("http://www.youtube.com/watch?v=ZoGQrKC2ztI");
        mangle(allThat);
        burninate(allThat);
    }
    int main(string[] args) {
        Piggy piggy;
        shit[] code;

        code = newarray(9001, shit);
        piggy.delete(code);
        return 0;
    }
}

booty[][] generateBooty(BootyStream b) {
    almost_booty[] a;
    booty[][] b;

    a = generateFromSource(boot);
    b = bottle(filter(a));

    return b;
}